// The purpose of the adjust-for-distance
// function is to calculate how much
// fontsize should be increased
// based on how far away the users are
// from the display.
// The further they are away,
// the larger the fonts will render.
//
// Reference:
// close: 0-10 ft
// medium: 10-25 ft
// far: 25-50 ft
// very-far: 50+ ft
@use "sass:list";
@use "sass:map";

$distance-to-size-ratio: (
	'close': 16,
	'medium': 24,
	'far': 32,
	'very-far': 32,
);

@function adjust-for-distance($base, $distance) {
	@if not map.get($distance-to-size-ratio, $distance) {
		@error "#{$distance} is not a valid distance. Expected one of #{$distance-to-size-ratio}.";
	}

	// $adjusted-size: $size * map.get($distance-to-size-ratio, $distance);
	$multiplier: map.get($distance-to-size-ratio, $distance);
	$adjusted-size: $base / $multiplier * 16 * 1rem;
	@debug $adjusted-size;
	@return $adjusted-size;
}

// @debug 'ADJUSTING FOR DISTANCE';
// @debug adjust-for-distance(10px, 'medium');

@each $name, $multiplier in $distance-to-size-ratio {
	@include breakpoint(vast) {
		.distance-#{$name} {
			h1 {
				font-size: adjust-for-distance(48, $name);
			}
			h2 {
				font-size: adjust-for-distance(40, $name);
			}
			h3 {
				font-size: adjust-for-distance(31, $name);
			}
			h4 {
				font-size: adjust-for-distance(25, $name);
			}
			h5 {
				font-size: adjust-for-distance(20, $name);
			}
			h6 {
				font-size: adjust-for-distance(16, $name);
			}
			p,
			a,
			button {
				font-size: adjust-for-distance(16, $name);
			}
		}
	}
}
