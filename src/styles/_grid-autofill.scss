// generates widths based on how many columns there are
@for $column from 1 through 50 {
	@include vast-breakpoint {
		.columns-#{$column}.grid-x {
			@for $span from 1 through 50 {
				& > .vast-#{$span} {
					width: calc(100% / #{$column} * #{$span});
				}
			}
		}
		@media screen and (orientation: portrait) {
			.portrait-columns-#{$column}.grid-x {
				@for $span from 1 through 50 {
					& > .vast-#{$span} {
						width: calc(100% / #{$column} * #{$span}) !important;
					}
				}
			}
		}
	}
	.emulate-vast {
		.columns-#{$column}.grid-x {
			@for $span from 1 through 50 {
				& > .vast-#{$span} {
					width: calc(100% / #{$column} * #{$span});
				}
			}
		}
		@media screen and (orientation: portrait) {
			.portrait-columns-#{$column}.grid-x {
				@for $span from 1 through 50 {
					& > .vast-#{$span} {
						width: calc(100% / #{$column} * #{$span}) !important;
					}
				}
			}
		}
	}
}

// generates heights based on how many rows there are
@mixin rowHeight($row) {
	.rows-#{$row}.grid-y {
		@for $span from 1 through 50 {
			& > .vast-#{$span} {
				height: calc(100% / #{$row} * #{$span});
			}
		}
	}
	@media screen and (orientation: portrait) {
		.portrait-rows-#{$row}.grid-y {
			@for $span from 1 through 50 {
				& > .vast-#{$span} {
					height: calc(100% / #{$row} * #{$span});
				}
			}
		}
	}
}
@for $row from 1 through 50 {
	@include vast-breakpoint {
		@include rowHeight($row);
	}
	.emulate-vast {
		@include rowHeight($row);
	}
}

// .fit-all-vertical adjusts the height of every cell
@mixin deriveRowHeight($row, $emulateVast: false) {
	$baseClass: '.fit-all-vertical';
	@if $emulateVast {
		$baseClass: '.fit-all-vertical.emulate-vast';
	}
	#{$baseClass} {
		.grid-y.fit-#{$row} .cell {
			height: #{$row}vh;
		}
	}
}
@for $row from 1 through 100 {
	@include vast-breakpoint {
		@include deriveRowHeight($row);
	}
	// .emulate-vast
	@include deriveRowHeight($row, true);
}

@mixin fitAllVertical($emulateVast: false) {
	$baseClass: '.fit-all-vertical';
	@if $emulateVast {
		$baseClass: '.fit-all-vertical.emulate-vast';
	}
	#{$baseClass} {
		display: grid;
		.grid-y .grid-x {
			height: 100%;
		}
	}
}

@include vast-breakpoint {
	@include fitAllVertical();
}

// .emulate-vast
@include fitAllVertical(true);
